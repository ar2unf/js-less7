{"version":3,"sources":["Board.js","Game.js","Main.js","Status.js"],"names":[],"mappingsfile":"../app.js","sourcesContent":["class Board {\r\n    constructor() {\r\n        this.game_table_element = document.getElementById('game');\r\n    }\r\n\r\n    //инициализируем доску\r\n    init(game, status) {\r\n        this.game = game;\r\n        this.status = status;\r\n    }\r\n\r\n    //рисуем поле\r\n    render_map() {\r\n        for (let row = 0; row < 3; row++) {\r\n            const tr = document.createElement('tr');\r\n            this.game_table_element.appendChild(tr);\r\n            for (let col = 0; col < 3; col++) {\r\n                let td = document.createElement('td');\r\n                td.dataset.row = row.toString();\r\n                td.dataset.col = col.toString();\r\n                tr.appendChild(td);\r\n            }\r\n        }\r\n    }\r\n\r\n    // включаем обработку кликов\r\n    init_event_handlers() {\r\n        // Ставим обработчик, при клике на таблицу вызовется функция this_cell_click_handler.\r\n        this.game_table_element.addEventListener('click', event => this.game.cell_click_handler(event));\r\n\r\n    }\r\n\r\n    // клик по ячейке?\r\n    is_click_by_cell(event) {\r\n        console.log(event.target.tagName);\r\n        return event.target.tagName == 'TD';\r\n    }\r\n\r\n    // ячейка пустая?\r\n    is_cell_empty(event) {\r\n        // Получаем строку и колонку куда кликнули.\r\n        let row = +event.target.dataset.row;\r\n        let col = +event.target.dataset.col;\r\n        console.log(this.status.map_val[row][col]);\r\n\r\n        return this.status.map_val[row][col] === '';\r\n    }\r\n\r\n    // запоним ячеку\r\n    fill_cell(event) {\r\n        // Получаем строку и колонку куда кликнули.\r\n        let row = +event.target.dataset.row;\r\n        let col = +event.target.dataset.col;\r\n        console.log(event);   \r\n\r\n        // заполним ячейку и заполним массив координат\r\n        this.status.map_val[row][col] = this.status.phase;\r\n        event.target.textContent = this.status.phase;\r\n    }\r\n}","class Game {\r\n\r\n    //класс игры инициализируем другие объекты\r\n    init(status, board) {\r\n        this.status = status;\r\n        this.board = board;\r\n    }\r\n\r\n    // функция обработки клика\r\n    cell_click_handler(event) {\r\n        // Если клик не обрабатывать.\r\n        if (!this.is_correct_click(event)) {\r\n\r\n            return;\r\n        }\r\n        this.board.fill_cell(event);\r\n        if (this.win()) {\r\n            // Ставим статус в \"остановлено\".\r\n            this.status.set_status_stopped();\r\n            // Сообщаем о победе пользователя.\r\n            this.say_win();\r\n        }\r\n\r\n        // Меняем фигуру (крестик или нолик).\r\n        this.status.toggle_symb();\r\n    }\r\n\r\n    // проверям клик на пустоту ячейки, на активность игры и на то что клик был на ячейке таблицы\r\n    is_correct_click(event) {\r\n        console.log(this.board.is_cell_empty(event));\r\n        return this.status.is_status_playing() && this.board.is_click_by_cell(event) && this.board.is_cell_empty(event);\r\n    }\r\n\r\n    // карта выйгрышей\r\n    win() {\r\n        return this.is_line_win({ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }) ||\r\n               this.is_line_win({ x: 0, y: 1 }, { x: 1, y: 1 }, { x: 2, y: 1 }) ||\r\n               this.is_line_win({ x: 0, y: 2 }, { x: 1, y: 2 }, { x: 2, y: 2 }) ||\r\n\r\n               this.is_line_win({ x: 0, y: 0 }, { x: 0, y: 1 }, { x: 0, y: 2 }) ||\r\n               this.is_line_win({ x: 1, y: 0 }, { x: 1, y: 1 }, { x: 1, y: 2 }) ||\r\n               this.is_line_win({ x: 2, y: 0 }, { x: 2, y: 1 }, { x: 2, y: 2 }) ||\r\n\r\n               this.is_line_win({ x: 0, y: 0 }, { x: 1, y: 1 }, { x: 2, y: 2 }) ||\r\n               this.is_line_win({ x: 0, y: 2 }, { x: 1, y: 1 }, { x: 2, y: 0 });\r\n    }\r\n\r\n    // выйграл?\r\n    is_line_win(x, y, z) {\r\n        let value = this.status.map_val[x.y][x.x] + this.status.map_val[y.y][y.x] + this.status.map_val[z.y][z.x];\r\n        return value === 'XXX' || value === '000';\r\n    }\r\n\r\n    //победа\r\n    say_win() {\r\n        let figure = this.status.phase === 'X' ? 'Крестики' : 'Нолики';\r\n        alert (figure+\" выиграли!\");\r\n    }\r\n}","window.addEventListener('load', function() {\r\n    const game = new Game();\r\n    const board = new Board();\r\n    const status = new Status();\r\n\r\n    board.init(game, status);\r\n    game.init(status, board);\r\n\r\n    board.render_map();\r\n    board.init_event_handlers();\r\n});","class Status {\r\n    constructor() {\r\n        this.status = 'playing'; // изначально играем\r\n        this.map_val = [ // массив координат\r\n            ['', '', ''],\r\n            ['', '', ''],\r\n            ['', '', ''],\r\n        ];\r\n        this.phase = 'X'; // за кресты\r\n    }\r\n\r\n    // играем?\r\n    is_status_playing() {\r\n        return this.status === 'playing';\r\n    }\r\n\r\n    // не играем\r\n    set_status_stopped() {\r\n        this.status = 'stopped';\r\n    }\r\n\r\n    // смена символа\r\n    toggle_symb() {\r\n        this.phase = this.phase === 'X' ? '0' : 'X';\r\n    }\r\n}"]}